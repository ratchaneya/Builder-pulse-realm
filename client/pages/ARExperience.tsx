import { useState, useEffect, useRef } from "react";
import { useNavigate, useSearchParams } from "react-router-dom";
import {
  ArrowLeft,
  Camera,
  MapPin,
  Star,
  Volume2,
  VolumeX,
  Gift,
  Droplets,
  Recycle,
  Leaf,
  Award,
  X,
  Share2,
  Languages,
  Play,
  Pause,
  RotateCcw,
} from "lucide-react";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";
import { cn } from "@/lib/utils";

interface ARHero {
  id: string;
  name: string;
  nameEn: string;
  role: string;
  roleEn: string;
  story: string;
  storyEn: string;
  voiceLine: string;
  voiceLineEn: string;
  audioUrl: string;
  audioUrlEn: string;
  imageUrl: string;
  avatarUrl: string;
  achievements: string[];
  achievementsEn: string[];
}

interface ARLocation {
  id: string;
  name: string;
  nameEn: string;
  type: "tourist_spot" | "community_spot";
  description: string;
  descriptionEn: string;
  sustainabilityFeature: string;
  sustainabilityFeatureEn: string;
  coordinates: { lat: number; lng: number };
  arMarkerId: string;
  hero: ARHero;
  rewardAmount: number;
  shareTemplate: {
    thai: string;
    english: string;
  };
}

const locationMapping: Record<string, string> = {
  doi_suthep: "doi_pui_forest",
  mae_rim: "ton_pao_village",
  san_kamphaeng: "aunt_pen_cafe",
  doi_pui_forest: "doi_pui_forest",
  aunt_pen_cafe: "aunt_pen_cafe",
  ton_pao_village: "ton_pao_village",
  huai_kaew_waterfall: "huai_kaew_waterfall",
};

export default function ARExperience() {
  const navigate = useNavigate();
  const [searchParams] = useSearchParams();
  const locationParam = searchParams.get("location") || "doi_suthep";
  const locationId = locationMapping[locationParam] || "doi_pui_forest";

  const [arStarted, setArStarted] = useState(false);
  const [location, setLocation] = useState<ARLocation | null>(null);
  const [showWelcome, setShowWelcome] = useState(false);
  const [showLocalHero, setShowLocalHero] = useState(false);
  const [showMarkerScanner, setShowMarkerScanner] = useState(false);
  const [markerDetected, setMarkerDetected] = useState(false);
  const [audioPlaying, setAudioPlaying] = useState(false);
  const [rewardClaimed, setRewardClaimed] = useState(false);
  const [arElementsVisible, setArElementsVisible] = useState(false);
  const [language, setLanguage] = useState<"thai" | "english">("thai");
  const [showShare, setShowShare] = useState(false);
  const [showSubtitles, setShowSubtitles] = useState(true);
  const [currentSubtitle, setCurrentSubtitle] = useState("");

  const videoRef = useRef<HTMLVideoElement>(null);
  const audioRef = useRef<HTMLAudioElement>(null);
  const arSceneRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    loadLocationData();
  }, [locationId]);

  const loadLocationData = async () => {
    try {
      // Use mock data directly for demo (API endpoint not implemented yet)
      setLocation(getMockLocation(locationId));

      // Simulate arrival and prompt for marker scanning
      setTimeout(() => {
        setShowWelcome(true);
      }, 1000);
    } catch (error) {
      console.error("Error loading location:", error);
      setLocation(getMockLocation(locationId));
      setTimeout(() => {
        setShowWelcome(true);
      }, 1000);
    }
  };

  const getMockLocation = (id: string): ARLocation => {
    const mockLocations: Record<string, ARLocation> = {
      doi_pui_forest: {
        id: "doi_pui_forest",
        name: "‡∏õ‡πà‡∏≤‡∏î‡∏≠‡∏¢‡∏õ‡∏∏‡∏¢",
        nameEn: "Doi Pui Forest",
        type: "tourist_spot",
        description: "‡∏õ‡πà‡∏≤‡∏ú‡∏∑‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 300 ‡∏ä‡∏ô‡∏¥‡∏î ‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏≠‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà",
        descriptionEn:
          "This forest has over 300 tree species and serves as Chiang Mai's lungs",
        sustainabilityFeature:
          "‡πÉ‡∏ä‡πâ‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡πÅ‡∏™‡∏á‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏Å‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß",
        sustainabilityFeatureEn: "Solar-powered visitor facilities",
        coordinates: { lat: 18.8547, lng: 98.9184 },
        arMarkerId: "doi_pui_marker",
        hero: {
          id: "forest_guide_somchai",
          name: "‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏õ‡πà‡∏≤ ‡∏™‡∏°‡∏ä‡∏≤‡∏¢",
          nameEn: "Forest Guardian Somchai",
          role: "‡∏ô‡∏±‡∏Å‡∏≠‡∏ô‡∏∏‡∏£‡∏±‡∏Å‡∏©‡πå‡∏õ‡πà‡∏≤",
          roleEn: "Forest Conservationist",
          story:
            "‡∏™‡∏°‡∏ä‡∏≤‡∏¢‡∏î‡∏π‡πÅ‡∏•‡∏õ‡πà‡∏≤‡∏î‡∏≠‡∏¢‡∏õ‡∏∏‡∏¢‡∏°‡∏≤ 15 ‡∏õ‡∏µ ‡∏õ‡∏•‡∏π‡∏Å‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏∏‡∏Å‡∏õ‡∏µ ‡πÅ‡∏•‡∏∞‡∏™‡∏≠‡∏ô‡πÄ‡∏¢‡∏≤‡∏ß‡∏ä‡∏ô‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏õ‡πà‡∏≤",
          storyEn:
            "Somchai has protected Doi Pui forest for 15 years, planting new trees annually and teaching youth forest conservation",
          voiceLine:
            "‡πÉ‡∏ô‡∏õ‡πà‡∏≤‡∏ú‡∏∑‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏°‡∏≤‡∏Å‡∏ÅÔøΩÔøΩÔøΩ‡πà‡∏≤ 300 ‡∏ä‡∏ô‡∏¥‡∏î ‡πÄ‡∏£‡∏≤‡∏õ‡∏•‡∏π‡∏Å‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏∏‡∏Å‡∏õ‡∏µ ‡∏õ‡πà‡∏≤‡∏à‡∏∞‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤ ‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏õ‡πà‡∏≤",
          voiceLineEn:
            "This forest has over 300 tree species. We plant new ones every year. The forest will stay with us if we stay with the forest.",
          audioUrl: "/audio/somchai-thai.mp3",
          audioUrlEn: "/audio/somchai-english.mp3",
          imageUrl: "/images/somchai-forest.jpg",
          avatarUrl: "/avatars/somchai-3d.glb",
          achievements: [
            "‡∏õ‡∏•‡∏π‡∏Å‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß 2,000 ‡∏ï‡πâ‡∏ô",
            "‡∏ù‡∏∂‡∏Å‡∏≠‡∏ö‡∏£‡∏°‡πÄ‡∏¢‡∏≤‡∏ß‡∏ä‡∏ô 500+ ‡∏Ñ‡∏ô",
            "‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏•‡∏≤‡∏¢‡∏õ‡πà‡∏≤ 80%",
          ],
          achievementsEn: [
            "Planted 2,000+ trees",
            "Trained 500+ youth",
            "Reduced deforestation by 80%",
          ],
        },
        rewardAmount: 15,
        shareTemplate: {
          thai: "‡∏û‡∏ö‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏û‡∏¥‡∏ó‡∏±‡∏Å‡∏©‡πå‡∏õ‡πà‡∏≤‡∏à‡∏£‡∏¥‡∏á ‡πÜ ‡∏ó‡∏µ‡πà‡∏î‡∏≠‡∏¢‡∏õ‡∏∏‡∏¢ üå≤üáπüá≠ #EcoHero #ChiangMai",
          english:
            "Met a real forest guardian at Doi Pui üå≤üáπüá≠ #EcoHero #ChiangMai",
        },
      },
      aunt_pen_cafe: {
        id: "aunt_pen_cafe",
        name: "‡∏£‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡πÅ‡∏ü‡∏õ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô",
        nameEn: "Aunt Pen's Caf√©",
        type: "community_spot",
        description: "‡∏£‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡πÅ‡∏ü‡∏ä‡∏∏‡∏°‡∏ä‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏¥‡∏Å‡πÉ‡∏ä‡πâ‡∏û‡∏•‡∏≤‡∏™‡∏ï‡∏¥‡∏Å‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏õ‡∏µ 2562",
        descriptionEn: "Community caf√© that went plastic-free since 2019",
        sustainabilityFeature: "‡∏õ‡∏•‡∏≠‡∏î‡∏û‡∏•‡∏≤‡∏™‡∏ï‡∏¥‡∏Å ‡πÉ‡∏ä‡πâ‡∏ñ‡πâ‡∏ß‡∏¢‡πÑ‡∏ú‡πà‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏≠‡∏î‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©",
        sustainabilityFeatureEn:
          "Plastic-free with bamboo cups and paper straws",
        coordinates: { lat: 18.7756, lng: 98.9856 },
        arMarkerId: "pen_cafe_marker",
        hero: {
          id: "aunt_pen",
          name: "‡∏õ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô",
          nameEn: "Aunt Pen",
          role: "‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡πÅ‡∏ü",
          roleEn: "Caf√© Owner",
          story:
            "‡∏õ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡πÅ‡∏£‡∏Å‡πÉ‡∏ô‡∏¢‡πà‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏¥‡∏Å‡πÉ‡∏ä‡πâ‡∏û‡∏•‡∏≤‡∏™‡∏ï‡∏¥‡∏Å ‡πÄ‡∏ò‡∏≠‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏∑ÔøΩÔøΩ‡∏ô ‡πÜ ‡∏ï‡∏≤‡∏°‡∏°‡∏≤",
          storyEn:
            "Aunt Pen was the first in the neighborhood to go plastic-free, inspiring other shops to follow",
          voiceLine:
            "‡∏â‡∏±‡∏ô‡πÄ‡∏•‡∏¥‡∏Å‡πÉ‡∏ä‡πâ‡∏´‡∏•‡∏≠‡∏î‡∏û‡∏•‡∏≤‡∏™‡∏ï‡∏¥‡∏Å‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏õ‡∏µ 2562 ‡πÉ‡∏Ñ‡∏£‡∏à‡∏∞‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡∏°‡∏±‡∏ô‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡∏ó‡∏∞‡πÄ‡∏•‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á ‡πÜ",
          voiceLineEn:
            "I stopped using plastic straws since 2019. Who knew it would really help the ocean?",
          audioUrl: "/audio/pen-thai.mp3",
          audioUrlEn: "/audio/pen-english.mp3",
          imageUrl: "/images/aunt-pen.jpg",
          avatarUrl: "/avatars/pen-3d.glb",
          achievements: [
            "‡∏õ‡∏•‡∏≠‡∏î‡∏û‡∏•‡∏≤‡∏™‡∏ï‡∏¥‡∏Å 100%",
            "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏•‡∏î‡∏Ç‡∏¢‡∏∞ 5 ‡∏ï‡∏±‡∏ô/‡∏õ‡∏µ",
            "‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏£‡∏á‡∏ö‡∏±‡∏ô‡∏î‡∏≤‡∏•‡πÉ‡∏à‡πÉ‡∏´‡πâ‡∏£‡πâ‡∏≤‡∏ô 20+ ‡∏£‡πâ‡∏≤‡∏ô",
          ],
          achievementsEn: [
            "100% plastic-free",
            "Customers reduced 5 tons/year waste",
            "Inspired 20+ other shops",
          ],
        },
        rewardAmount: 10,
        shareTemplate: {
          thai: "‡∏û‡∏ö‡∏Å‡∏±‡∏ö‡∏Æ‡∏µ‡πÇ‡∏£‡πà‡∏ä‡∏∏‡∏°‡∏ä‡∏ô‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≤‡∏ô‡∏õ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô ‚ôªÔ∏èüáπüá≠ #ZeroWaste #ChiangMai",
          english:
            "Met a community hero at Aunt Pen's Caf√© ‚ôªÔ∏èüáπüá≠ #ZeroWaste #ChiangMai",
        },
      },
      ton_pao_village: {
        id: "ton_pao_village",
        name: "‡∏ö‡πâ‡∏≤‡∏ô‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡∏≤‡∏∞",
        nameEn: "Ban Ton Pao Weaving Village",
        type: "community_spot",
        description: "‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏≠‡∏ú‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥‡∏à‡∏≤‡∏Å‡πÉ‡∏ö‡πÑ‡∏°‡πâ",
        descriptionEn: "Weaving village using natural dyes from leaves",
        sustainabilityFeature: "‡∏¢‡πâ‡∏≠‡∏°‡∏ú‡πâ‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏µ‡∏à‡∏≤‡∏Å‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥ 100%",
        sustainabilityFeatureEn: "100% natural plant-based fabric dyes",
        coordinates: { lat: 18.8123, lng: 98.8945 },
        arMarkerId: "tonpao_marker",
        hero: {
          id: "elder_malee",
          name: "‡∏¢‡∏≤‡∏¢‡∏°‡∏≤‡∏•‡∏µ",
          nameEn: "Elder Malee",
          role: "‡∏ä‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏ú‡πâ‡∏≤‡∏≠‡∏≤‡∏ß‡∏∏‡πÇ‡∏™",
          roleEn: "Master Weaver",
          story: "‡∏¢‡∏≤‡∏¢‡∏°‡∏≤‡∏•‡∏µ‡∏™‡∏∑‡∏ö‡∏ó‡∏≠‡∏î‡∏†‡∏π‡∏°‡∏¥‡∏õ‡∏±‡∏ç‡∏ç‡∏≤‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≠‡∏°‡∏ú‡πâ‡∏≤‡∏à‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏≤‡∏¢‡∏°‡∏≤ 4 ‡∏£‡∏∏‡πà‡∏ô",
          storyEn:
            "Elder Malee inherited the wisdom of natural dyeing from her grandmother, 4 generations deep",
          voiceLine:
            "‡πÄ‡∏£‡∏≤‡∏™‡∏∑‡∏ö‡∏ó‡∏≠‡∏î‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≠‡∏°‡∏ú‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡∏°‡∏≤ 4 ‡∏£‡∏∏‡πà‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏™‡∏µ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏´‡πá‡∏ô‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡πÉ‡∏ö‡πÑ‡∏°‡πâ‡∏•‡πâ‡∏ß‡∏ô ‡πÜ",
          voiceLineEn:
            "We've inherited this dyeing tradition for 4 generations. The colors you see come purely from leaves.",
          audioUrl: "/audio/malee-thai.mp3",
          audioUrlEn: "/audio/malee-english.mp3",
          imageUrl: "/images/elder-malee.jpg",
          avatarUrl: "/avatars/malee-3d.glb",
          achievements: [
            "‡∏™‡∏∑‡∏ö‡∏ó‡∏≠‡∏î‡∏†‡∏π‡∏°‡∏¥‡∏õ‡∏±‡∏ç‡∏ç‡∏≤ 4 ‡∏£‡∏∏‡πà‡∏ô",
            "‡∏™‡∏≠‡∏ô‡πÄ‡∏î‡πá‡∏Å‡∏´‡∏ô‡∏∏‡πà‡∏°‡∏™‡∏≤‡∏ß 200+ ‡∏Ñ‡∏ô",
            "‡∏Ç‡∏≤‡∏¢‡∏ú‡πâ‡∏≤‡πÑ‡∏õ‡∏ó‡∏±‡πà‡∏ß‡πÇ‡∏•‡∏Å 30+ ‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®",
          ],
          achievementsEn: [
            "4 generations of wisdom",
            "Taught 200+ young people",
            "Fabrics sold to 30+ countries",
          ],
        },
        rewardAmount: 12,
        shareTemplate: {
          thai: "‡∏û‡∏ö‡∏Å‡∏±‡∏ö‡∏¢‡∏≤‡∏¢‡∏°‡∏≤‡∏•‡∏µ ‡∏ô‡∏±‡∏Å‡∏ó‡∏≠‡∏ú‡πâ‡∏≤‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ï‡∏≥‡∏ô‡∏≤‡∏ô ‡∏ó‡∏µ‡πà‡∏ö‡πâ‡∏≤‡∏ô‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡∏≤‡∏∞ üßµüáπüá≠ #TraditionalCraft #ChiangMai",
          english:
            "Met legendary weaver Elder Malee at Ton Pao Village üßµüáπüá≠ #TraditionalCraft #ChiangMai",
        },
      },
      huai_kaew_waterfall: {
        id: "huai_kaew_waterfall",
        name: "‡∏ô‡πâ‡∏≥‡∏ï‡∏Å‡∏´‡πâ‡∏ß‡∏¢ÔøΩÔøΩÔøΩ‡∏Å‡πâ‡∏ß",
        nameEn: "Huai Kaew Waterfall",
        type: "tourist_spot",
        description: "‡∏ô‡πâ‡∏≥‡∏ï‡∏Å‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏•‡∏¥‡∏ï‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡∏à‡∏≤‡∏Å‡∏û‡∏•‡∏±‡∏á‡∏ô‡πâ‡∏≥‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å",
        descriptionEn:
          "Waterfall with small-scale hydroelectric power generation",
        sustainabilityFeature: "‡πÉ‡∏ä‡πâ‡∏û‡∏•‡∏±‡∏á‡∏ô‡πâ‡∏≥‡∏ú‡∏•‡∏¥‡∏ï‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô",
        sustainabilityFeatureEn:
          "Hydroelectric power for walking trail lighting",
        coordinates: { lat: 18.8198, lng: 98.9245 },
        arMarkerId: "waterfall_marker",
        hero: {
          id: "park_ranger_niran",
          name: "‡∏ô‡∏¥‡∏£‡∏±‡∏ô‡∏î‡∏£‡πå",
          nameEn: "Park Ranger Niran",
          role: "‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏∏‡∏ó‡∏¢‡∏≤‡∏ô",
          roleEn: "Park Ranger",
          story: "‡∏ô‡∏¥‡∏£‡∏±‡∏ô‡∏î‡∏£‡πå‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡∏û‡∏•‡∏±‡∏á‡∏ô‡πâ‡∏≥‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏¥‡πÄ‡∏ß‡∏®",
          storyEn:
            "Niran designed the hydroelectric system that doesn't disturb the ecosystem",
          voiceLine:
            "‡∏ô‡πâ‡∏≥‡∏ï‡∏Å‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÅ‡∏Å‡πà‡πÄ‡∏£‡∏≤‡∏óÔøΩÔøΩ‡∏Å‡∏ß‡∏±‡∏ô ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏£‡πâ‡∏≤‡∏¢‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥",
          voiceLineEn:
            "This waterfall gives us clean energy every day without harming nature.",
          audioUrl: "/audio/niran-thai.mp3",
          audioUrlEn: "/audio/niran-english.mp3",
          imageUrl: "/images/ranger-niran.jpg",
          avatarUrl: "/avatars/niran-3d.glb",
          achievements: [
            "‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏¥‡∏ïÔøΩÔøΩÔøΩ‡∏Å‡∏±‡∏ö‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°",
            "‡∏•‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡∏à‡∏≤‡∏Å‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡πÄ‡∏û‡∏•‡∏¥‡∏á‡∏ü‡∏≠‡∏™‡∏ã‡∏¥‡∏• 90%",
            "‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏ô‡πÅ‡∏ö‡∏ö‡∏≠‡∏∏‡∏ó‡∏¢‡∏≤‡∏ô 15 ‡πÅ‡∏´‡πà‡∏á",
          ],
          achievementsEn: [
            "Designed eco-friendly power system",
            "Reduced fossil fuel electricity by 90%",
            "Model for 15 other parks",
          ],
        },
        rewardAmount: 12,
        shareTemplate: {
          thai: "‡∏û‡∏ö‡∏Å‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡∏≠‡∏ô‡∏∏‡∏£‡∏±‡∏Å‡∏©‡πå‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡πâ‡∏≥‡∏ï‡∏Å‡∏´‡πâ‡∏ß‡∏¢‡πÅ‡∏ÅÔøΩÔøΩÔøΩ‡∏ß ‚ö°üáπüá≠ #CleanEnergy #ChiangMai",
          english:
            "Met an energy conservationist at Huai Kaew Waterfall ‚ö°üáπüá≠ #CleanEnergy #ChiangMai",
        },
      },
    };

    return mockLocations[id] || mockLocations.doi_pui_forest;
  };

  useEffect(() => {
    if (arStarted) {
      loadARFramework();
    }
  }, [arStarted]);

  const loadARFramework = async () => {
    try {
      // Check if we're on HTTPS
      if (location.protocol !== "https:" && location.hostname !== "localhost") {
        alert(
          "AR features require HTTPS. Please access the app via a secure connection.",
        );
        return;
      }

      // Load A-Frame first
      const aframeScript = document.createElement("script");
      aframeScript.src = "https://aframe.io/releases/1.4.0/aframe.min.js";

      aframeScript.onload = () => {
        // Then load AR.js
        const arScript = document.createElement("script");
        arScript.src =
          "https://cdn.jsdelivr.net/npm/ar.js@3.4.5/aframe/build/aframe-ar.js";
        arScript.onload = () => {
          initializeARScene();
        };
        arScript.onerror = () => {
          console.error("Failed to load AR.js");
          alert(
            "Failed to load AR library. Please check your internet connection.",
          );
        };
        document.head.appendChild(arScript);
      };

      aframeScript.onerror = () => {
        console.error("Failed to load A-Frame");
        alert(
          "Failed to load AR framework. Please check your internet connection.",
        );
      };

      document.head.appendChild(aframeScript);
    } catch (error) {
      console.error("Error loading AR framework:", error);
    }
  };

  const initializeARScene = () => {
    if (!arSceneRef.current || !location) return;

    // Clear any existing content
    arSceneRef.current.innerHTML = "";

    // Create AR scene with marker detection
    const scene = document.createElement("a-scene");
    scene.setAttribute("embedded", "true");
    scene.setAttribute(
      "arjs",
      JSON.stringify({
        sourceType: "webcam",
        debugUIEnabled: false,
        detectionMode: "mono_and_matrix",
        matrixCodeType: "3x3",
        trackingMethod: "best",
        sourceWidth: 1280,
        sourceHeight: 960,
        displayWidth: 1280,
        displayHeight: 960,
      }),
    );
    scene.style.width = "100%";
    scene.style.height = "100%";
    scene.style.zIndex = "1";

    // Create marker entity
    const marker = document.createElement("a-marker");
    marker.setAttribute("preset", "custom");
    marker.setAttribute("type", "pattern");
    marker.setAttribute("url", `/markers/${location.arMarkerId}.patt`);
    marker.setAttribute("smooth", "true");
    marker.setAttribute("smoothCount", "10");
    marker.setAttribute("smoothTolerance", "0.01");
    marker.setAttribute("smoothThreshold", "5");

    // Marker detection events
    marker.addEventListener("markerFound", () => {
      setMarkerDetected(true);
      setArElementsVisible(true);
    });

    marker.addEventListener("markerLost", () => {
      setMarkerDetected(false);
    });

    // Create floating place introduction
    const placeTitle = document.createElement("a-text");
    placeTitle.setAttribute("position", "0 2 0");
    placeTitle.setAttribute("scale", "1.5 1.5 1.5");
    placeTitle.setAttribute("color", "#2E7D32");
    placeTitle.setAttribute("align", "center");
    placeTitle.setAttribute(
      "value",
      language === "thai" ? location.name : location.nameEn,
    );
    placeTitle.setAttribute(
      "animation",
      "property: position; to: 0 2.5 0; dir: alternate; loop: true; dur: 3000; easing: easeInOutSine",
    );
    marker.appendChild(placeTitle);

    // Sustainability feature text
    const sustainabilityText = document.createElement("a-text");
    sustainabilityText.setAttribute("position", "0 1.3 0");
    sustainabilityText.setAttribute("scale", "0.8 0.8 0.8");
    sustainabilityText.setAttribute("color", "#4CAF50");
    sustainabilityText.setAttribute("align", "center");
    sustainabilityText.setAttribute("width", "6");
    sustainabilityText.setAttribute(
      "value",
      language === "thai"
        ? location.sustainabilityFeature
        : location.sustainabilityFeatureEn,
    );
    marker.appendChild(sustainabilityText);

    // Create location description
    const descText = document.createElement("a-text");
    descText.setAttribute("position", "0 1 -3");
    descText.setAttribute("scale", "1 1 1");
    descText.setAttribute("color", "#2E7D32");
    descText.setAttribute("align", "center");
    descText.setAttribute("width", "6");
    descText.setAttribute("value", location.description);
    scene.appendChild(descText);

    // Create eco-elements
    if (location.ecoElements.waterRefill) {
      const waterIcon = document.createElement("a-box");
      waterIcon.setAttribute("position", "-2 0.5 -2");
      waterIcon.setAttribute("rotation", "0 45 0");
      waterIcon.setAttribute("color", "#2196F3");
      waterIcon.setAttribute("scale", "0.3 0.6 0.3");
      waterIcon.setAttribute(
        "animation",
        "property: position; to: -2 1 -2; dir: alternate; loop: true; dur: 2000",
      );
      scene.appendChild(waterIcon);

      const waterLabel = document.createElement("a-text");
      waterLabel.setAttribute("position", "-2 0 -2");
      waterLabel.setAttribute("scale", "0.5 0.5 0.5");
      waterLabel.setAttribute("color", "#2196F3");
      waterLabel.setAttribute("align", "center");
      waterLabel.setAttribute("value", "Water Refill");
      scene.appendChild(waterLabel);
    }

    if (location.ecoElements.compostBin) {
      const compostIcon = document.createElement("a-cylinder");
      compostIcon.setAttribute("position", "2 0.5 -2");
      compostIcon.setAttribute("color", "#8BC34A");
      compostIcon.setAttribute("scale", "0.3 0.6 0.3");
      compostIcon.setAttribute(
        "animation",
        "property: rotation; to: 0 360 0; loop: true; dur: 3000",
      );
      scene.appendChild(compostIcon);

      const compostLabel = document.createElement("a-text");
      compostLabel.setAttribute("position", "2 0 -2");
      compostLabel.setAttribute("scale", "0.5 0.5 0.5");
      compostLabel.setAttribute("color", "#8BC34A");
      compostLabel.setAttribute("align", "center");
      compostLabel.setAttribute("value", "Compost Bin");
      scene.appendChild(compostLabel);
    }

    if (location.ecoElements.solarPower) {
      const solarPanel = document.createElement("a-plane");
      solarPanel.setAttribute("position", "0 3 -4");
      solarPanel.setAttribute("rotation", "-15 0 0");
      solarPanel.setAttribute("color", "#1565C0");
      solarPanel.setAttribute("scale", "1 0.7 1");
      solarPanel.setAttribute(
        "animation",
        "property: material.color; to: #FFD54F; dir: alternate; loop: true; dur: 2000",
      );
      scene.appendChild(solarPanel);

      const solarLabel = document.createElement("a-text");
      solarLabel.setAttribute("position", "0 2.5 -4");
      solarLabel.setAttribute("scale", "0.5 0.5 0.5");
      solarLabel.setAttribute("color", "#1565C0");
      solarLabel.setAttribute("align", "center");
      solarLabel.setAttribute("value", "Solar Powered");
      scene.appendChild(solarLabel);
    }

    // Create camera
    const camera = document.createElement("a-entity");
    camera.setAttribute("camera", "");
    scene.appendChild(camera);

    arSceneRef.current.appendChild(scene);
    setArElementsVisible(true);
  };

  const startARExperience = async () => {
    try {
      // Check if we're on HTTPS (required for camera access)
      if (location.protocol !== "https:" && location.hostname !== "localhost") {
        const thaiMessage = `‚ö†Ô∏è ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ HTTPS ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á

‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ (https://) ‡πÅ‡∏ó‡∏ô
‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ Netlify, Vercel, ‡∏´‡∏£‡∏∑‡∏≠ GitHub Pages

‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà: ${location.href}
‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£: https://your-domain.com`;

        alert(thaiMessage);
        return;
      }

      // Check if getUserMedia is available
      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {
        const thaiMessage = `‚ùå ‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á

‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ:
‚Ä¢ Chrome (‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥)
‚Ä¢ Firefox
‚Ä¢ Safari (iOS 11+)
‚Ä¢ Edge

‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå`;
        alert(thaiMessage);
        return;
      }

      // Show loading state
      console.log("üé• ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á...");

      // Request camera permission with specific constraints
      const stream = await navigator.mediaDevices.getUserMedia({
        video: {
          facingMode: "environment", // Use back camera
          width: { ideal: 1280, min: 640 },
          height: { ideal: 960, min: 480 },
        },
      });

      // Test that we got a valid stream
      if (stream && stream.getVideoTracks().length > 0) {
        console.log("‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");

        // Test camera capabilities
        const videoTrack = stream.getVideoTracks()[0];
        const capabilities = videoTrack.getCapabilities
          ? videoTrack.getCapabilities()
          : {};
        console.log("Camera capabilities:", capabilities);

        stream.getTracks().forEach((track) => track.stop()); // Stop test stream
        setArStarted(true);
      } else {
        throw new Error("No video tracks available");
      }
    } catch (error) {
      console.error("Camera access error:", error);

      let thaiMessage = "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ\n\n";

      if (error.name === "NotAllowedError") {
        thaiMessage += `üö´ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á

‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:
1. ‡∏Ñ‡∏•‡∏¥‡∏Å "‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï" ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ñ‡∏≤‡∏°
2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô üîí ‡∏Ç‡πâ‡∏≤‡∏á‡∏ö‡∏ô‡πÅ‡∏ñ‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà
3. ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
4. ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ôÔøΩÔøΩ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÅ‡∏•‡∏∞‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà`;
      } else if (error.name === "NotFoundError") {
        thaiMessage += `üì∑ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÉ‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ

‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:
‚Ä¢ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏°‡∏µ‡∏Å‡∏•‡πâ‡∏≠‡∏á
‚Ä¢ ‡πÄ‡∏™‡∏µ‡∏¢‡∏ö‡∏Å‡∏•‡πâ‡∏≠‡∏á USB (‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå)
‚Ä¢ ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡πÅ‡∏≠‡∏õ‡∏Å‡∏•‡πâ‡∏≠‡∏á
‚Ä¢ ‡∏•‡∏≠‡∏á‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏≠‡∏∑‡πà‡∏ô`;
      } else if (error.name === "NotSupportedError") {
        thaiMessage += `‚ö†Ô∏è ‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö WebRTC

‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ:
‚Ä¢ Chrome ‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠ (‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥)
‚Ä¢ Firefox
‚Ä¢ Safari (iOS 11+)`;
      } else if (error.name === "NotReadableError") {
        thaiMessage += `üîí ‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏î‡∏¢‡πÅ‡∏≠‡∏õ‡∏≠‡∏∑‡πà‡∏ô

‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:
‚Ä¢ ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏≠‡∏∑‡πà‡∏ô ‡πÜ
‚Ä¢ ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡πá‡∏ö‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏Å‡∏•‡πâ‡∏≠‡∏á
‚Ä¢ ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå`;
      } else {
        thaiMessage += `üîß ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏

‡∏•‡∏≠‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ:
‚Ä¢ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
‚Ä¢ ‡∏õ‡∏¥‡∏î-‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà
‚Ä¢ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
‚Ä¢ ‡πÉ‡∏ä‡πâ‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏≠‡∏∑‡πà‡∏ô

‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.message}`;
      }

      alert(thaiMessage);
    }
  };

  const playHeroStory = () => {
    setShowLocalHero(true);
    if (audioRef.current) {
      audioRef.current.src =
        language === "thai"
          ? location?.hero.audioUrl || ""
          : location?.hero.audioUrlEn || "";
      audioRef.current.play();
      setAudioPlaying(true);

      // Show subtitles
      if (showSubtitles && location) {
        setCurrentSubtitle(
          language === "thai"
            ? location.hero.voiceLine
            : location.hero.voiceLineEn,
        );
      }
    }
  };

  const handleShare = async () => {
    if (!location) return;

    const shareText =
      language === "thai"
        ? location.shareTemplate.thai
        : location.shareTemplate.english;

    if (navigator.share) {
      try {
        await navigator.share({
          title: `EcoTravel - ${language === "thai" ? location.name : location.nameEn}`,
          text: shareText,
          url: window.location.href,
        });
      } catch (error) {
        console.log("Share cancelled or failed");
      }
    } else {
      // Fallback: copy to clipboard
      navigator.clipboard.writeText(shareText + " " + window.location.href);
      alert("Share text copied to clipboard!");
    }
  };

  const toggleAudio = () => {
    if (audioRef.current) {
      if (audioPlaying) {
        audioRef.current.pause();
      } else {
        audioRef.current.play();
      }
      setAudioPlaying(!audioPlaying);
    }
  };

  const claimBonusReward = async () => {
    if (!location || !markerDetected) {
      alert("Please scan the AR marker first to claim your reward!");
      return;
    }

    try {
      const response = await fetch("/api/green-miles", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          userId: "demo_user_001",
          route: {
            origin: { name: "Nimman Road", lat: 18.7984, lng: 98.9681 },
            destination: {
              name: language === "thai" ? location.name : location.nameEn,
              lat: location.coordinates.lat,
              lng: location.coordinates.lng,
            },
            mode: {
              mode: "walk",
              name: "Walking",
              icon: "walk",
              emissionFactor: 0,
            },
            distance: 5,
            duration: 30,
            co2Emissions: 0,
          },
          isOutsideCity: location.type === "tourist_spot",
          isRecommendedZone: true,
          bonusAmount: location.rewardAmount,
        }),
      });

      const result = await response.json();
      if (result.success) {
        setRewardClaimed(true);
        setTimeout(() => setRewardClaimed(false), 5000);
      }
    } catch (error) {
      console.error("Error claiming reward:", error);
    }
  };

  if (!location) {
    return (
      <div className="min-h-screen bg-background flex items-center justify-center">
        <p className="text-muted-foreground">Location not found</p>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-black relative">
      {/* Header */}
      <header className="absolute top-0 left-0 right-0 z-50 bg-black/50 backdrop-blur-sm">
        <div className="container max-w-md mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <Button
              variant="ghost"
              size="sm"
              onClick={() => navigate(-1)}
              className="text-white hover:bg-white/20"
            >
              <ArrowLeft className="h-4 w-4" />
            </Button>

            <div className="text-center text-white">
              <h1 className="font-semibold">AR Experience</h1>
              <p className="text-xs opacity-80">{location.name}</p>
            </div>

            <Badge className="bg-green-600 text-white">
              <MapPin className="h-3 w-3 mr-1" />
              Arrived
            </Badge>
          </div>
        </div>
      </header>

      {/* AR Scene Container */}
      <div
        ref={arSceneRef}
        className="w-full h-full"
        style={{ display: arStarted ? "block" : "none" }}
      />

      {/* Welcome Screen */}
      {!arStarted && (
        <div className="absolute inset-0 flex items-center justify-center bg-gradient-to-br from-green-900 to-blue-900">
          <Card className="p-6 m-4 text-center max-w-sm bg-white/95">
            <div className="text-4xl mb-4">üåü</div>
            <h2 className="text-xl font-bold text-green-800 mb-2">
              Welcome to {location.name}!
            </h2>
            <p className="text-sm text-muted-foreground mb-6">
              Experience this sustainable destination through augmented reality
              and meet local eco-heroes making a difference.
            </p>

            <Button
              onClick={startARExperience}
              className="w-full bg-green-600 hover:bg-green-700 text-white"
            >
              <Camera className="h-4 w-4 mr-2" />
              Start AR Experience
            </Button>
          </Card>
        </div>
      )}

      {/* AR Controls Overlay */}
      {arStarted && (
        <div className="absolute bottom-0 left-0 right-0 z-40 bg-black/70 backdrop-blur-sm p-4">
          <div className="container max-w-md mx-auto space-y-3">
            {/* Marker Detection Status */}
            <div className="text-center mb-4">
              {markerDetected ? (
                <div className="bg-green-600 text-white px-4 py-2 rounded-full inline-flex items-center gap-2">
                  <Camera className="h-4 w-4" />
                  <span className="text-sm font-medium">
                    {language === "thai"
                      ? "‡∏û‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ AR!"
                      : "AR Marker Detected!"}
                  </span>
                </div>
              ) : (
                <div className="bg-orange-600 text-white px-4 py-2 rounded-full inline-flex items-center gap-2">
                  <RotateCcw className="h-4 w-4 animate-spin" />
                  <span className="text-sm font-medium">
                    {language === "thai"
                      ? "‡∏°‡∏≠‡∏á‡∏´‡∏≤‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ AR..."
                      : "Looking for AR marker..."}
                  </span>
                </div>
              )}
            </div>

            {/* Sustainability Feature Display */}
            {markerDetected && location && (
              <div className="bg-white/10 backdrop-blur-sm rounded-lg p-3 mb-4">
                <div className="text-center text-white">
                  <div className="text-2xl mb-2">
                    {location.type === "tourist_spot" ? "üèûÔ∏è" : "üèòÔ∏è"}
                  </div>
                  <h3 className="font-semibold mb-1">
                    {language === "thai" ? location.name : location.nameEn}
                  </h3>
                  <p className="text-sm opacity-90">
                    {language === "thai"
                      ? location.sustainabilityFeature
                      : location.sustainabilityFeatureEn}
                  </p>
                </div>
              </div>
            )}

            {/* Action Buttons */}
            <div className="grid grid-cols-2 gap-3">
              <Button
                onClick={playHeroStory}
                disabled={!markerDetected}
                className={cn(
                  "text-white",
                  markerDetected
                    ? "bg-blue-600 hover:bg-blue-700"
                    : "bg-gray-500 cursor-not-allowed",
                )}
              >
                <Volume2 className="h-4 w-4 mr-2" />
                {language === "thai" ? "‡∏ü‡∏±‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Æ‡∏µ‡πÇ‡∏£‡πà" : "Hero Story"}
              </Button>

              <Button
                onClick={claimBonusReward}
                disabled={rewardClaimed || !markerDetected}
                className={cn(
                  "text-white",
                  rewardClaimed
                    ? "bg-gray-500 cursor-not-allowed"
                    : !markerDetected
                      ? "bg-gray-500 cursor-not-allowed"
                      : "bg-green-600 hover:bg-green-700",
                )}
              >
                <Gift className="h-4 w-4 mr-2" />
                {rewardClaimed
                  ? language === "thai"
                    ? "‡∏£‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß!"
                    : "Claimed!"
                  : `+${location?.rewardAmount || 10} ${language === "thai" ? "‡πÑ‡∏°‡∏•‡πå" : "Miles"}`}
              </Button>
            </div>

            {/* Language Toggle */}
            <Button
              onClick={() =>
                setLanguage(language === "thai" ? "english" : "thai")
              }
              variant="outline"
              className="w-full text-white border-white/30 hover:bg-white/10"
            >
              <Languages className="h-4 w-4 mr-2" />
              {language === "thai" ? "Switch to English" : "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢"}
            </Button>
          </div>
        </div>
      )}

      {/* Welcome Dialog */}
      <Dialog open={showWelcome} onOpenChange={setShowWelcome}>
        <DialogContent className="max-w-sm mx-auto">
          <DialogHeader>
            <DialogTitle className="text-green-700 flex items-center gap-2">
              <Star className="h-5 w-5" />
              {language === "thai"
                ? `‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà ${location?.name}!`
                : `Welcome to ${location?.nameEn}!`}
            </DialogTitle>
          </DialogHeader>

          <div className="space-y-4">
            <div className="text-center">
              <div className="text-6xl mb-4">
                {location?.type === "tourist_spot" ? "üèûÔ∏è" : "üèòÔ∏è"}
              </div>
              <Badge className="mb-3">
                {location?.type === "tourist_spot"
                  ? "Tourist Spot"
                  : "Community Spot"}
              </Badge>
              <p className="text-sm text-muted-foreground">
                {language === "thai"
                  ? "‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤ÔøΩÔøΩ‡∏∂‡∏á‡∏à‡∏∏‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏¢‡∏±‡πà‡∏á‡∏¢‡∏∑‡∏ô‡πÅ‡∏•‡πâ‡∏ß!"
                  : "You've arrived at a certified sustainable destination!"}
              </p>
            </div>

            <div className="bg-green-50 border border-green-200 rounded-lg p-3">
              <p className="text-sm text-green-700">
                {language === "thai"
                  ? location?.description
                  : location?.descriptionEn}
              </p>
            </div>

            <div className="bg-blue-50 border border-blue-200 rounded-lg p-3">
              <p className="text-sm text-blue-700 font-medium mb-2">
                {language === "thai" ? "‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ:" : "Next Step:"}
              </p>
              <p className="text-sm text-blue-600 mb-2">
                {language === "thai"
                  ? "‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏™‡πÅ‡∏Å‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ AR"
                  : "Tap the button below to open camera and scan AR marker"}
              </p>
              {location.protocol !== "https:" &&
                location.hostname !== "localhost" && (
                  <div className="mt-2 p-2 bg-orange-100 border border-orange-300 rounded text-xs text-orange-700">
                    {language === "thai"
                      ? "‚ö†Ô∏è ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ HTTPS ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢"
                      : "‚ö†Ô∏è HTTPS required for camera access. Please use secure link"}
                  </div>
                )}
            </div>
            <div className="flex gap-3">
              <Button
                onClick={() =>
                  setLanguage(language === "thai" ? "english" : "thai")
                }
                variant="outline"
                className="flex-1"
              >
                <Languages className="h-4 w-4 mr-2" />
                {language === "thai" ? "English" : "‡πÑ‡∏ó‡∏¢"}
              </Button>

              <Button
                onClick={() => {
                  setShowWelcome(false);
                  startARExperience();
                }}
                className="flex-1 bg-green-600 hover:bg-green-700 text-white"
              >
                <Camera className="h-4 w-4 mr-2" />
                {language === "thai" ? "üé• ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏•‡πâ‡∏≠‡∏á AR" : "üé• Open AR Camera"}
              </Button>
            </div>
          </div>
        </DialogContent>
      </Dialog>

      {/* Local Hero Dialog */}
      <Dialog open={showLocalHero} onOpenChange={setShowLocalHero}>
        <DialogContent className="max-w-sm mx-auto max-h-[80vh] overflow-y-auto">
          <DialogHeader>
            <DialogTitle className="text-green-700 flex items-center gap-2">
              <Award className="h-5 w-5" />
              {language === "thai"
                ? `‡∏Æ‡∏µ‡πÇ‡∏£‡πà‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô: ${location?.hero.name}`
                : `Local Eco-Hero: ${location?.hero.nameEn}`}
            </DialogTitle>
          </DialogHeader>

          <div className="space-y-4">
            {/* Hero Avatar */}
            <div className="relative bg-gradient-to-br from-green-100 to-blue-100 rounded-lg overflow-hidden h-48">
              <div className="absolute inset-0 flex items-center justify-center">
                <div className="text-center">
                  <div className="w-20 h-20 bg-green-600 rounded-full flex items-center justify-center mx-auto mb-3">
                    <Award className="h-10 w-10 text-white" />
                  </div>
                  <p className="text-lg font-bold text-green-800">
                    {language === "thai"
                      ? location?.hero.name
                      : location?.hero.nameEn}
                  </p>
                  <p className="text-sm text-green-600">
                    {language === "thai"
                      ? location?.hero.role
                      : location?.hero.roleEn}
                  </p>
                </div>
              </div>
            </div>

            {/* Voice Line with Subtitles */}
            {showSubtitles && currentSubtitle && (
              <div className="bg-black/80 text-white p-3 rounded-lg">
                <p className="text-sm text-center italic">
                  "{currentSubtitle}"
                </p>
              </div>
            )}

            {/* Hero Story */}
            <div className="bg-green-50 border border-green-200 rounded-lg p-3">
              <h4 className="font-semibold text-green-800 mb-2">
                {language === "thai" ? "‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß" : "Story"}
              </h4>
              <p className="text-sm text-green-700">
                {language === "thai"
                  ? location?.hero.story
                  : location?.hero.storyEn}
              </p>
            </div>

            {/* Achievements */}
            <div className="bg-blue-50 border border-blue-200 rounded-lg p-3">
              <h4 className="font-semibold text-blue-800 mb-2">
                {language === "thai" ? "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" : "Achievements"}
              </h4>
              <ul className="space-y-1">
                {(language === "thai"
                  ? location?.hero.achievements
                  : location?.hero.achievementsEn
                )?.map((achievement, index) => (
                  <li
                    key={index}
                    className="text-sm text-blue-700 flex items-start gap-2"
                  >
                    <Star className="h-3 w-3 text-blue-600 mt-0.5 flex-shrink-0" />
                    {achievement}
                  </li>
                ))}
              </ul>
            </div>

            {/* Audio Controls */}
            <div className="grid grid-cols-3 gap-2">
              <Button
                onClick={toggleAudio}
                variant="outline"
                className="flex items-center gap-1"
              >
                {audioPlaying ? (
                  <Pause className="h-3 w-3" />
                ) : (
                  <Play className="h-3 w-3" />
                )}
                {audioPlaying
                  ? language === "thai"
                    ? "‡∏´‡∏¢‡∏∏‡∏î"
                    : "Pause"
                  : language === "thai"
                    ? "‡∏ü‡∏±‡∏á"
                    : "Listen"}
              </Button>

              <Button
                onClick={() => setShowSubtitles(!showSubtitles)}
                variant="outline"
                className="text-xs"
              >
                {showSubtitles ? "Hide" : "Show"} Sub
              </Button>

              <Button
                onClick={handleShare}
                variant="outline"
                className="flex items-center gap-1"
              >
                <Share2 className="h-3 w-3" />
                {language === "thai" ? "‡πÅ‡∏ä‡∏£‡πå" : "Share"}
              </Button>
            </div>

            <div className="flex gap-3">
              <Button
                onClick={() =>
                  setLanguage(language === "thai" ? "english" : "thai")
                }
                variant="outline"
                className="flex-1"
              >
                <Languages className="h-4 w-4 mr-2" />
                {language === "thai" ? "English" : "‡πÑ‡∏ó‡∏¢"}
              </Button>

              <Button
                onClick={() => setShowLocalHero(false)}
                className="flex-1"
              >
                {language === "thai" ? "‡∏îÔøΩÔøΩ AR ‡∏ï‡πà‡∏≠" : "Continue AR"}
              </Button>
            </div>
          </div>

          {/* Hidden Audio Element */}
          <audio
            ref={audioRef}
            onEnded={() => {
              setAudioPlaying(false);
              setCurrentSubtitle("");
            }}
            onLoadedMetadata={() => {
              // Set subtitle timing
              if (showSubtitles && location) {
                setCurrentSubtitle(
                  language === "thai"
                    ? location.hero.voiceLine
                    : location.hero.voiceLineEn,
                );
              }
            }}
          />
        </DialogContent>
      </Dialog>

      {/* Reward Claimed Notification */}
      {rewardClaimed && location && (
        <div className="absolute top-20 left-4 right-4 z-50">
          <Card className="p-4 bg-green-600 text-white text-center animate-bounce">
            <div className="flex items-center justify-center gap-2 mb-2">
              <Gift className="h-6 w-6" />
              <span className="font-bold text-lg">
                +{location.rewardAmount}{" "}
                {language === "thai" ? "‡πÄ‡∏Å‡∏£‡∏µ‡∏ô ‡πÑ‡∏°‡∏•‡πå!" : "Green Miles!"}
              </span>
            </div>
            <p className="text-sm opacity-90">
              {language === "thai"
                ? `‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πàÔøΩÔøΩ‡∏≤‡πÄ‡∏¢ÔøΩÔøΩÔøΩ‡πà‡∏¢‡∏°‡∏ä‡∏° ${location.name}!`
                : `Thanks for visiting ${location.nameEn}!`}
            </p>
            <p className="text-xs opacity-75 mt-1">
              {language === "thai"
                ? "‡∏û‡∏ö‡∏Å‡∏±‡∏ö‡∏Æ‡∏µ‡πÇ‡∏£‡πà‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô‡πÅ‡∏•‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏£‡∏á‡∏ö‡∏±‡∏ô‡∏î‡∏≤‡∏•‡πÉ‡∏à"
                : "Met a local hero and got inspired!"}
            </p>
          </Card>
        </div>
      )}
    </div>
  );
}
